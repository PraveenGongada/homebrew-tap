# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Catalyst < Formula
  desc "Terminal UI tool to simplify triggering GitHub Actions workflows with matrix configurations"
  homepage "https://github.com/PraveenGongada/catalyst"
  version "1.0.1"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/PraveenGongada/catalyst/releases/download/v1.0.1/catalyst_Darwin_x86_64.tar.gz"
      sha256 "8145ba8f3ab63d99700337aee72642e1fc9d9be92eb7aadb0e515536b08e4664"

      def install
        bin.install "catalyst"

        # Install completion scripts if the command exists
        if Utils.safe_popen_read(bin/"catalyst", "-help").include?("completion")
          bash_output = Utils.safe_popen_read(bin/"catalyst", "completion", "bash") rescue ""
          (bash_completion/"catalyst").write bash_output unless bash_output.empty?

          zsh_output = Utils.safe_popen_read(bin/"catalyst", "completion", "zsh") rescue ""
          (zsh_completion/"_catalyst").write zsh_output unless zsh_output.empty?

          fish_output = Utils.safe_popen_read(bin/"catalyst", "completion", "fish") rescue ""
          (fish_completion/"catalyst.fish").write fish_output unless fish_output.empty?
        end
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/PraveenGongada/catalyst/releases/download/v1.0.1/catalyst_Darwin_arm64.tar.gz"
      sha256 "632b139341ed9348a072bc91a0e347a628dc464a4eb6c8bf27a0a75789dcbcaa"

      def install
        bin.install "catalyst"

        # Install completion scripts if the command exists
        if Utils.safe_popen_read(bin/"catalyst", "-help").include?("completion")
          bash_output = Utils.safe_popen_read(bin/"catalyst", "completion", "bash") rescue ""
          (bash_completion/"catalyst").write bash_output unless bash_output.empty?

          zsh_output = Utils.safe_popen_read(bin/"catalyst", "completion", "zsh") rescue ""
          (zsh_completion/"_catalyst").write zsh_output unless zsh_output.empty?

          fish_output = Utils.safe_popen_read(bin/"catalyst", "completion", "fish") rescue ""
          (fish_completion/"catalyst.fish").write fish_output unless fish_output.empty?
        end
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/PraveenGongada/catalyst/releases/download/v1.0.1/catalyst_Linux_x86_64.tar.gz"
      sha256 "1e392a04aa7cca689820fc4808af2155becf90f46c65cf379905113d5b7dc6bb"
      def install
        bin.install "catalyst"

        # Install completion scripts if the command exists
        if Utils.safe_popen_read(bin/"catalyst", "-help").include?("completion")
          bash_output = Utils.safe_popen_read(bin/"catalyst", "completion", "bash") rescue ""
          (bash_completion/"catalyst").write bash_output unless bash_output.empty?

          zsh_output = Utils.safe_popen_read(bin/"catalyst", "completion", "zsh") rescue ""
          (zsh_completion/"_catalyst").write zsh_output unless zsh_output.empty?

          fish_output = Utils.safe_popen_read(bin/"catalyst", "completion", "fish") rescue ""
          (fish_completion/"catalyst.fish").write fish_output unless fish_output.empty?
        end
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/PraveenGongada/catalyst/releases/download/v1.0.1/catalyst_Linux_arm64.tar.gz"
      sha256 "6764cd02121a3071fddd9bba3428555fa7df13da64233ebe4bd6aa57a2803a72"
      def install
        bin.install "catalyst"

        # Install completion scripts if the command exists
        if Utils.safe_popen_read(bin/"catalyst", "-help").include?("completion")
          bash_output = Utils.safe_popen_read(bin/"catalyst", "completion", "bash") rescue ""
          (bash_completion/"catalyst").write bash_output unless bash_output.empty?

          zsh_output = Utils.safe_popen_read(bin/"catalyst", "completion", "zsh") rescue ""
          (zsh_completion/"_catalyst").write zsh_output unless zsh_output.empty?

          fish_output = Utils.safe_popen_read(bin/"catalyst", "completion", "fish") rescue ""
          (fish_completion/"catalyst.fish").write fish_output unless fish_output.empty?
        end
      end
    end
  end

  test do
    system "#{bin}/catalyst", "-version"
  end
end
